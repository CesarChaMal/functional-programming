package session2.solution.business_logic;

import session2.solution.entity.Employee;
import session2.solution.entity.Genre;

import java.util.List;
import java.util.stream.Collectors;

public class EmployeeManagement {

    // TODO 1: Print a report for all the employees.
    // Hint: the report line for one employee is generated by printReportLine() method
    public void printReportBody(List<Employee> employees) {
        employees
                .stream()
                .forEach(this::printReportLine);
    }

    // TODO 2: Increase the salary of each employee
    public List<Employee> increaseSalary(List<Employee> employees, Double percentage) {
        return employees.stream()
                .map(employee -> {
                    employee.setSalary(increaseAmount(employee.getSalary(), percentage));
                    return employee;
                })
                .collect(Collectors.toList());
    }

    // TODO 3: Filter employees by their genre
    public List<Employee> filterByGender(List<Employee> employees, Genre genre) {
        return employees
                .stream()
                .filter(employee -> employee.getGenre() == genre)
                .collect(Collectors.toList());
    }

    // TODO 4: Compute the salary average for the employees having a certain function
    // Hint: For the average, use a reduction function of the stream
    public Double getTotalSalaryByFunction(List<Employee> employees, String function) {
        return employees
                .stream()
                .filter(employee -> employee.getFunction().equals(function))
                .mapToDouble(Employee::getSalary)
                .average()
                .orElse(0);
    }

    private void printReportLine(Employee employee) {
        System.out.println(employee.getFirstName()
                + " "
                + employee.getLastName()
                + ", "
                + employee.getFunction()
                + " - "
                + employee.getSalary());
    }

    private double increaseAmount(Double amount, Double percentage) {
        return amount + amount * percentage;
    }
}
